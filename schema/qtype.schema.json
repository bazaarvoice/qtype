{
  "$defs": {
    "APITool": {
      "additionalProperties": false,
      "description": "Tool that invokes an API endpoint.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "name": {
          "description": "Name of the tool function.",
          "title": "Name",
          "type": "string"
        },
        "description": {
          "description": "Description of what the tool does.",
          "title": "Description",
          "type": "string"
        },
        "endpoint": {
          "description": "API endpoint URL to call.",
          "title": "Endpoint",
          "type": "string"
        },
        "method": {
          "default": "GET",
          "description": "HTTP method to use (GET, POST, PUT, DELETE, etc.).",
          "title": "Method",
          "type": "string"
        },
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/AuthorizationProvider"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional AuthorizationProvider for API authentication.",
          "title": "Auth"
        },
        "headers": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional HTTP headers to include in the request.",
          "title": "Headers"
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "endpoint"
      ],
      "title": "APITool",
      "type": "object"
    },
    "Agent": {
      "additionalProperties": false,
      "description": "Defines an agent that can perform tasks and make decisions based on user input and context.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "memory": {
          "anyOf": [
            {
              "$ref": "#/$defs/Memory"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Memory object to retain context across interactions."
        },
        "model": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmbeddingModel"
            },
            {
              "$ref": "#/$defs/Model"
            },
            {
              "type": "string"
            }
          ],
          "description": "The model to use for inference.",
          "title": "Model"
        },
        "system_message": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional system message to set the context for the model.",
          "title": "System Message"
        },
        "tools": {
          "description": "List of tools available to the agent.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/APITool"
              },
              {
                "$ref": "#/$defs/PythonFunctionTool"
              }
            ]
          },
          "title": "Tools",
          "type": "array"
        }
      },
      "required": [
        "id",
        "model",
        "tools"
      ],
      "title": "Agent",
      "type": "object"
    },
    "Application": {
      "additionalProperties": false,
      "description": "Defines a QType application that can include models, variables, and other components.",
      "properties": {
        "id": {
          "description": "Unique ID of the application.",
          "title": "Id",
          "type": "string"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional description of the application.",
          "title": "Description"
        },
        "memories": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Memory"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of memory definitions used in this application.",
          "title": "Memories"
        },
        "models": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/EmbeddingModel"
                  },
                  {
                    "$ref": "#/$defs/Model"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of models used in this application.",
          "title": "Models"
        },
        "variables": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Variable"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of variables used in this application.",
          "title": "Variables"
        },
        "flows": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Flow"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of flows defined in this application.",
          "title": "Flows"
        },
        "auths": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/AuthorizationProvider"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of authorization providers used for API access.",
          "title": "Auths"
        },
        "tools": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/APITool"
                  },
                  {
                    "$ref": "#/$defs/PythonFunctionTool"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of tools available in this application.",
          "title": "Tools"
        },
        "indexes": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/DocumentIndex"
                  },
                  {
                    "$ref": "#/$defs/VectorIndex"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of indexes available for search operations.",
          "title": "Indexes"
        },
        "telemetry": {
          "anyOf": [
            {
              "$ref": "#/$defs/TelemetrySink"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional telemetry sink for observability."
        },
        "references": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Document"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of other q-type documents you may use. This allows modular composition and reuse of components across applications.",
          "title": "References"
        }
      },
      "required": [
        "id"
      ],
      "title": "Application",
      "type": "object"
    },
    "AuthorizationProvider": {
      "additionalProperties": false,
      "description": "Defines how tools or providers authenticate with APIs, such as OAuth2 or API keys.",
      "properties": {
        "id": {
          "description": "Unique ID of the authorization configuration.",
          "title": "Id",
          "type": "string"
        },
        "api_key": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "API key if using token-based auth.",
          "title": "Api Key"
        },
        "client_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "OAuth2 client ID.",
          "title": "Client Id"
        },
        "client_secret": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "OAuth2 client secret.",
          "title": "Client Secret"
        },
        "host": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Base URL or domain of the provider.",
          "title": "Host"
        },
        "scopes": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "OAuth2 scopes required.",
          "title": "Scopes"
        },
        "token_url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Token endpoint URL.",
          "title": "Token Url"
        },
        "type": {
          "description": "Authorization method, e.g., 'oauth2' or 'api_key'.",
          "title": "Type",
          "type": "string"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "title": "AuthorizationProvider",
      "type": "object"
    },
    "AuthorizationProviderList": {
      "description": "Schema for a standalone list of authorization providers.",
      "items": {
        "$ref": "#/$defs/AuthorizationProvider"
      },
      "title": "AuthorizationProviderList",
      "type": "array"
    },
    "Condition": {
      "additionalProperties": false,
      "description": "Conditional logic gate within a flow. Supports branching logic for execution based on variable values.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "else": {
          "anyOf": [
            {
              "$ref": "#/$defs/Agent"
            },
            {
              "$ref": "#/$defs/APITool"
            },
            {
              "$ref": "#/$defs/Condition"
            },
            {
              "$ref": "#/$defs/DocumentSearch"
            },
            {
              "$ref": "#/$defs/Flow"
            },
            {
              "$ref": "#/$defs/LLMInference"
            },
            {
              "$ref": "#/$defs/PromptTemplate"
            },
            {
              "$ref": "#/$defs/PythonFunctionTool"
            },
            {
              "$ref": "#/$defs/VectorSearch"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional step to run if condition fails.",
          "title": "Else"
        },
        "equals": {
          "anyOf": [
            {
              "$ref": "#/$defs/Variable"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Match condition for equality check.",
          "title": "Equals"
        },
        "then": {
          "anyOf": [
            {
              "$ref": "#/$defs/Agent"
            },
            {
              "$ref": "#/$defs/APITool"
            },
            {
              "$ref": "#/$defs/Condition"
            },
            {
              "$ref": "#/$defs/DocumentSearch"
            },
            {
              "$ref": "#/$defs/Flow"
            },
            {
              "$ref": "#/$defs/LLMInference"
            },
            {
              "$ref": "#/$defs/PromptTemplate"
            },
            {
              "$ref": "#/$defs/PythonFunctionTool"
            },
            {
              "$ref": "#/$defs/VectorSearch"
            },
            {
              "type": "string"
            }
          ],
          "description": "Step to run if condition matches.",
          "title": "Then"
        }
      },
      "required": [
        "id",
        "then"
      ],
      "title": "Condition",
      "type": "object"
    },
    "Document": {
      "anyOf": [
        {
          "$ref": "#/$defs/Agent"
        },
        {
          "$ref": "#/$defs/Application"
        },
        {
          "$ref": "#/$defs/AuthorizationProviderList"
        },
        {
          "$ref": "#/$defs/Flow"
        },
        {
          "$ref": "#/$defs/IndexList"
        },
        {
          "$ref": "#/$defs/ModelList"
        },
        {
          "$ref": "#/$defs/ToolList"
        },
        {
          "$ref": "#/$defs/VariableList"
        }
      ],
      "description": "Schema for any valid QType document structure.\n\nThis allows validation of standalone lists of components, individual components,\nor full QType application specs. Supports modular composition and reuse.",
      "title": "Document"
    },
    "DocumentIndex": {
      "additionalProperties": false,
      "description": "Document search index for text-based search (e.g., Elasticsearch, OpenSearch).",
      "properties": {
        "id": {
          "description": "Unique ID of the index.",
          "title": "Id",
          "type": "string"
        },
        "args": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Index-specific configuration and connection parameters.",
          "title": "Args"
        },
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/AuthorizationProvider"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "AuthorizationProvider for accessing the index.",
          "title": "Auth"
        },
        "name": {
          "description": "Name of the index/collection/table.",
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "title": "DocumentIndex",
      "type": "object"
    },
    "DocumentSearch": {
      "additionalProperties": false,
      "description": "Performs document search against a document index.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "filters": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional filters to apply during search.",
          "title": "Filters"
        },
        "index": {
          "anyOf": [
            {
              "$ref": "#/$defs/DocumentIndex"
            },
            {
              "$ref": "#/$defs/VectorIndex"
            },
            {
              "type": "string"
            }
          ],
          "description": "Index to search against (object or ID reference).",
          "title": "Index"
        }
      },
      "required": [
        "id",
        "index"
      ],
      "title": "DocumentSearch",
      "type": "object"
    },
    "EmbeddingModel": {
      "additionalProperties": false,
      "description": "Describes an embedding model configuration, extending the base Model class.",
      "properties": {
        "id": {
          "description": "Unique ID for the model.",
          "title": "Id",
          "type": "string"
        },
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/AuthorizationProvider"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "AuthorizationProvider used for model access.",
          "title": "Auth"
        },
        "inference_params": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional inference parameters like temperature or max_tokens.",
          "title": "Inference Params"
        },
        "model_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The specific model name or ID for the provider. If None, id is used",
          "title": "Model Id"
        },
        "provider": {
          "description": "Name of the provider, e.g., openai or anthropic.",
          "title": "Provider",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensionality of the embedding vectors produced by this model.",
          "title": "Dimensions",
          "type": "integer"
        }
      },
      "required": [
        "id",
        "provider",
        "dimensions"
      ],
      "title": "EmbeddingModel",
      "type": "object"
    },
    "Flow": {
      "additionalProperties": false,
      "description": "Defines a flow of steps that can be executed in sequence or parallel.\nFlows can include conditions and memory for state management.\nIf input or output variables are not specified, they are inferred from\nthe first and last step, respectively.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "steps": {
          "description": "List of steps or step IDs.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Agent"
              },
              {
                "$ref": "#/$defs/APITool"
              },
              {
                "$ref": "#/$defs/Condition"
              },
              {
                "$ref": "#/$defs/DocumentSearch"
              },
              {
                "$ref": "#/$defs/Flow"
              },
              {
                "$ref": "#/$defs/LLMInference"
              },
              {
                "$ref": "#/$defs/PromptTemplate"
              },
              {
                "$ref": "#/$defs/PythonFunctionTool"
              },
              {
                "$ref": "#/$defs/VectorSearch"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Steps",
          "type": "array"
        }
      },
      "required": [
        "id"
      ],
      "title": "Flow",
      "type": "object"
    },
    "IndexList": {
      "description": "Schema for a standalone list of indexes.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/DocumentIndex"
          },
          {
            "$ref": "#/$defs/VectorIndex"
          }
        ]
      },
      "title": "IndexList",
      "type": "array"
    },
    "LLMInference": {
      "additionalProperties": false,
      "description": "Defines a step that performs inference using a language model.\nIt can take input variables and produce output variables based on the model's response.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "memory": {
          "anyOf": [
            {
              "$ref": "#/$defs/Memory"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Memory object to retain context across interactions."
        },
        "model": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmbeddingModel"
            },
            {
              "$ref": "#/$defs/Model"
            },
            {
              "type": "string"
            }
          ],
          "description": "The model to use for inference.",
          "title": "Model"
        },
        "system_message": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional system message to set the context for the model.",
          "title": "System Message"
        }
      },
      "required": [
        "id",
        "model"
      ],
      "title": "LLMInference",
      "type": "object"
    },
    "Memory": {
      "additionalProperties": false,
      "description": "Session or persistent memory used to store relevant conversation or state data across steps or turns.",
      "properties": {
        "id": {
          "description": "Unique ID of the memory block.",
          "title": "Id",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "title": "Memory",
      "type": "object"
    },
    "Model": {
      "additionalProperties": false,
      "description": "Describes a generative model configuration, including provider and model ID.",
      "properties": {
        "id": {
          "description": "Unique ID for the model.",
          "title": "Id",
          "type": "string"
        },
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/AuthorizationProvider"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "AuthorizationProvider used for model access.",
          "title": "Auth"
        },
        "inference_params": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional inference parameters like temperature or max_tokens.",
          "title": "Inference Params"
        },
        "model_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The specific model name or ID for the provider. If None, id is used",
          "title": "Model Id"
        },
        "provider": {
          "description": "Name of the provider, e.g., openai or anthropic.",
          "title": "Provider",
          "type": "string"
        }
      },
      "required": [
        "id",
        "provider"
      ],
      "title": "Model",
      "type": "object"
    },
    "ModelList": {
      "description": "Schema for a standalone list of models.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/EmbeddingModel"
          },
          {
            "$ref": "#/$defs/Model"
          }
        ]
      },
      "title": "ModelList",
      "type": "array"
    },
    "PromptTemplate": {
      "additionalProperties": false,
      "description": "Defines a prompt template with a string format and variable bindings.\nThis is used to generate prompts dynamically based on input variables.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "template": {
          "description": "String template for the prompt with variable placeholders.",
          "title": "Template",
          "type": "string"
        }
      },
      "required": [
        "id",
        "template"
      ],
      "title": "PromptTemplate",
      "type": "object"
    },
    "PythonFunctionTool": {
      "additionalProperties": false,
      "description": "Tool that calls a Python function.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "name": {
          "description": "Name of the tool function.",
          "title": "Name",
          "type": "string"
        },
        "description": {
          "description": "Description of what the tool does.",
          "title": "Description",
          "type": "string"
        },
        "function_name": {
          "description": "Name of the Python function to call.",
          "title": "Function Name",
          "type": "string"
        },
        "module_path": {
          "description": "Optional module path where the function is defined.",
          "title": "Module Path",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "function_name",
        "module_path"
      ],
      "title": "PythonFunctionTool",
      "type": "object"
    },
    "TelemetrySink": {
      "additionalProperties": false,
      "description": "Defines an observability endpoint for collecting telemetry data from the QType runtime.",
      "properties": {
        "id": {
          "description": "Unique ID of the telemetry sink configuration.",
          "title": "Id",
          "type": "string"
        },
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/AuthorizationProvider"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "AuthorizationProvider used to authenticate telemetry data transmission.",
          "title": "Auth"
        },
        "endpoint": {
          "description": "URL endpoint where telemetry data will be sent.",
          "title": "Endpoint",
          "type": "string"
        }
      },
      "required": [
        "id",
        "endpoint"
      ],
      "title": "TelemetrySink",
      "type": "object"
    },
    "ToolList": {
      "description": "Schema for a standalone list of tools.",
      "items": {
        "anyOf": [
          {
            "$ref": "#/$defs/APITool"
          },
          {
            "$ref": "#/$defs/PythonFunctionTool"
          }
        ]
      },
      "title": "ToolList",
      "type": "array"
    },
    "Variable": {
      "additionalProperties": false,
      "description": "Schema for a variable that can serve as input, output, or parameter within the DSL.",
      "properties": {
        "id": {
          "description": "Unique ID of the variable. Referenced in prompts or steps.",
          "title": "Id",
          "type": "string"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/VariableTypeEnum"
            },
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "items": {},
              "type": "array"
            }
          ],
          "description": "Type of data expected or produced. Can be:\n- A simple type from VariableType enum (e.g., 'text', 'number')\n- A dict defining object structure with property names as keys\n- For arrays: use [type] syntax (e.g., [text] for array of strings)\n- For nested objects: use nested dict structure\n- For tuples: use [type1, type2] syntax",
          "title": "Type"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "title": "Variable",
      "type": "object"
    },
    "VariableList": {
      "description": "Schema for a standalone list of variables.",
      "items": {
        "$ref": "#/$defs/Variable"
      },
      "title": "VariableList",
      "type": "array"
    },
    "VariableTypeEnum": {
      "description": "Represents the type of data a user or system input can accept within the DSL.",
      "enum": [
        "audio",
        "boolean",
        "bytes",
        "date",
        "datetime",
        "embedding",
        "int",
        "file",
        "float",
        "image",
        "number",
        "text",
        "time",
        "video"
      ],
      "title": "VariableTypeEnum",
      "type": "string"
    },
    "VectorIndex": {
      "additionalProperties": false,
      "description": "Vector database index for similarity search using embeddings.",
      "properties": {
        "id": {
          "description": "Unique ID of the index.",
          "title": "Id",
          "type": "string"
        },
        "args": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Index-specific configuration and connection parameters.",
          "title": "Args"
        },
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/AuthorizationProvider"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "AuthorizationProvider for accessing the index.",
          "title": "Auth"
        },
        "name": {
          "description": "Name of the index/collection/table.",
          "title": "Name",
          "type": "string"
        },
        "embedding_model": {
          "anyOf": [
            {
              "$ref": "#/$defs/EmbeddingModel"
            },
            {
              "type": "string"
            }
          ],
          "description": "Embedding model used to vectorize queries and documents.",
          "title": "Embedding Model"
        }
      },
      "required": [
        "id",
        "name",
        "embedding_model"
      ],
      "title": "VectorIndex",
      "type": "object"
    },
    "VectorSearch": {
      "additionalProperties": false,
      "description": "Performs vector similarity search against a vector index.",
      "properties": {
        "id": {
          "description": "Unique ID of this component.",
          "title": "Id",
          "type": "string"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Input variables required by this step.",
          "title": "Inputs"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Variable"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variable where output is stored.",
          "title": "Outputs"
        },
        "filters": {
          "anyOf": [
            {
              "additionalProperties": true,
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional filters to apply during search.",
          "title": "Filters"
        },
        "index": {
          "anyOf": [
            {
              "$ref": "#/$defs/DocumentIndex"
            },
            {
              "$ref": "#/$defs/VectorIndex"
            },
            {
              "type": "string"
            }
          ],
          "description": "Index to search against (object or ID reference).",
          "title": "Index"
        },
        "default_top_k": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "description": "Number of top results to retrieve if not provided in the inputs.",
          "title": "Default Top K"
        }
      },
      "required": [
        "id",
        "index",
        "default_top_k"
      ],
      "title": "VectorSearch",
      "type": "object"
    }
  },
  "$ref": "#/$defs/Document",
  "$schema": "http://json-schema.org/draft-07/schema#"
}