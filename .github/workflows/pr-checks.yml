name: PR Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          
      - name: Install dependencies
        run: |
          uv sync --group dev
          uv pip install -e .
          
      - name: Run tests with coverage
        run: |
          uv run pytest --cov=qtype --cov-report=xml --cov-report=term-missing -v
          
      - name: Coverage comment
        id: coverage_comment
        uses: orgoro/coverage@v3.2
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          thresholdAll: 0.8
          thresholdNew: 0.8
          thresholdModified: 0.8
          
      - name: Run ruff check (linting)
        run: |
          uv run ruff check qtype/ tests/
          
      - name: Check code formatting with ruff
        run: |
          uv run ruff format --check qtype/ tests/
          
      - name: Check import sorting with isort
        run: |
          uv run isort --check-only --diff qtype/ tests/
          
      - name: Run mypy type checking
        run: |
          uv run mypy qtype/ tests/
          
      - name: Verify CLI functionality
        run: |
          # Test that the CLI can be invoked
          uv run qtype --help
          # Test schema generation
          uv run qtype generate-schema -o /tmp/test-schema.json
          # Test validation if example exists
          if [ -f "examples/hello_world.qtype.yaml" ]; then
            uv run qtype validate examples/hello_world.qtype.yaml
          fi
